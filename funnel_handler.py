import os
import asyncio
import logging
from datetime import datetime, timedelta
from typing import List, Dict
from telegram.ext import ContextTypes
from database import Database

logger = logging.getLogger(__name__)

class FunnelHandler:
    def __init__(self, bot, database: Database):
        self.bot = bot
        self.db = database
        self.group_chat_id = os.getenv('GROUP_CHAT_ID')
        self.duvidas_group_link = os.getenv('DUVIDAS_GROUP_LINK', 'https://t.me/seu_grupo_duvidas')
    
    async def check_funnel_messages(self) -> None:
        """Verifica e envia mensagens do funil automaticamente"""
        try:
            logger.info("üîÑ Verificando mensagens do funil...")
            
            # Verificar usu√°rios para mensagem de 24h (step 0 -> 1)
            await self.send_funnel_message_24h()
            
            # Verificar usu√°rios para mensagem de 48h (step 1 -> 2)
            await self.send_funnel_message_48h()
            
            # Verificar usu√°rios para mensagem de 72h (step 2 -> 3)
            await self.send_funnel_message_72h()
            
            logger.info("‚úÖ Verifica√ß√£o do funil conclu√≠da")
            
        except Exception as e:
            logger.error(f"‚ùå Erro ao verificar mensagens do funil: {e}")
    
    async def send_funnel_message_24h(self) -> None:
        """Envia mensagem de 24h ap√≥s entrada no grupo"""
        users = self.db.get_users_for_funnel_step(0, 24)
        
        logger.info(f"üìß Enviando mensagens 24h para {len(users)} usu√°rios")
        
        for user in users:
            try:
                message = self.get_funnel_message_24h(user['first_name'])
                
                await self.bot.send_message(
                    chat_id=user['user_id'],
                    text=message['text'],
                    parse_mode=message['parse_mode'],
                    disable_web_page_preview=message.get('disable_web_page_preview', False)
                )
                
                # Atualizar passo do funil
                self.db.update_user_funnel_step(user['user_id'], 1)
                
                logger.info(f"üìß Mensagem 24h enviada para: {user['first_name']} ({user['user_id']})")
                
                # Delay para evitar spam
                await asyncio.sleep(2)
                
            except Exception as e:
                logger.error(f"‚ùå Erro ao enviar mensagem 24h para {user['user_id']}: {e}")
    
    async def send_funnel_message_48h(self) -> None:
        """Envia mensagem de 48h ap√≥s primeira mensagem"""
        users = self.db.get_users_for_funnel_step(1, 48)
        
        logger.info(f"üìß Enviando mensagens 48h para {len(users)} usu√°rios")
        
        for user in users:
            try:
                message = self.get_funnel_message_48h(user['first_name'])
                
                await self.bot.send_message(
                    chat_id=user['user_id'],
                    text=message['text'],
                    parse_mode=message['parse_mode'],
                    disable_web_page_preview=message.get('disable_web_page_preview', False)
                )
                
                # Atualizar passo do funil
                self.db.update_user_funnel_step(user['user_id'], 2)
                
                logger.info(f"üìß Mensagem 48h enviada para: {user['first_name']} ({user['user_id']})")
                
                # Delay para evitar spam
                await asyncio.sleep(2)
                
            except Exception as e:
                logger.error(f"‚ùå Erro ao enviar mensagem 48h para {user['user_id']}: {e}")
    
    async def send_funnel_message_72h(self) -> None:
        """Envia mensagem de 72h ap√≥s segunda mensagem"""
        users = self.db.get_users_for_funnel_step(2, 72)
        
        logger.info(f"üìß Enviando mensagens 72h para {len(users)} usu√°rios")
        
        for user in users:
            try:
                message = self.get_funnel_message_72h(user['first_name'])
                
                await self.bot.send_message(
                    chat_id=user['user_id'],
                    text=message['text'],
                    parse_mode=message['parse_mode'],
                    disable_web_page_preview=message.get('disable_web_page_preview', False)
                )
                
                # Atualizar passo do funil
                self.db.update_user_funnel_step(user['user_id'], 3)
                
                logger.info(f"üìß Mensagem 72h enviada para: {user['first_name']} ({user['user_id']})")
                
                # Delay para evitar spam
                await asyncio.sleep(2)
                
            except Exception as e:
                logger.error(f"‚ùå Erro ao enviar mensagem 72h para {user['user_id']}: {e}")
    
    def get_funnel_message_24h(self, first_name: str) -> Dict:
        """Retorna a mensagem de 24h personalizada"""
        text = f"""üëã Ol√°, {first_name}!

üéØ **Bem-vindo(a) ao nosso grupo de traders!**

Vi que voc√™ entrou no grupo ontem e queria te dar algumas dicas importantes para aproveitar ao m√°ximo nossa comunidade:

üìö **Para iniciantes:**
‚Ä¢ Leia as mensagens fixadas do grupo
‚Ä¢ Observe as an√°lises compartilhadas pelos membros
‚Ä¢ N√£o tenha pressa - aprendizado leva tempo

üí° **Dicas importantes:**
‚Ä¢ Nunca invista mais do que pode perder
‚Ä¢ Sempre fa√ßa sua pr√≥pria an√°lise
‚Ä¢ Gerencie seus riscos adequadamente

üîó **Links √∫teis:**
‚Ä¢ [Guia para Iniciantes](https://exemplo.com/guia)
‚Ä¢ [Estrat√©gias B√°sicas](https://exemplo.com/estrategias)
‚Ä¢ [Gerenciamento de Risco](https://exemplo.com/risco)

‚ùì **Tem alguma d√∫vida?** Fique √† vontade para perguntar no grupo!

üöÄ Vamos juntos nessa jornada de aprendizado!"""
        
        return {
            'text': text,
            'parse_mode': 'Markdown',
            'disable_web_page_preview': True
        }
    
    def get_funnel_message_48h(self, first_name: str) -> Dict:
        """Retorna a mensagem de 48h personalizada"""
        text = f"""üìà Oi {first_name}!

üéØ **Como est√° sendo sua experi√™ncia no grupo?**

J√° faz 2 dias que voc√™ est√° conosco e espero que esteja aproveitando o conte√∫do compartilhado!

üí™ **Pr√≥ximos passos para acelerar seu aprendizado:**

1Ô∏è‚É£ **Participe ativamente:**
   ‚Ä¢ Comente nas an√°lises
   ‚Ä¢ Compartilhe suas d√∫vidas
   ‚Ä¢ Interaja com outros membros

2Ô∏è‚É£ **Estude consistentemente:**
   ‚Ä¢ Dedique pelo menos 30min/dia
   ‚Ä¢ Pratique em conta demo primeiro
   ‚Ä¢ Anote seus aprendizados

3Ô∏è‚É£ **Recursos recomendados:**
   ‚Ä¢ [Curso B√°sico de Trading](https://exemplo.com/curso)
   ‚Ä¢ [An√°lise T√©cnica Essencial](https://exemplo.com/analise)
   ‚Ä¢ [Psicologia do Trader](https://exemplo.com/psicologia)

üí¨ **Grupo de D√∫vidas:**
Para perguntas mais espec√≠ficas, temos um grupo dedicado:
{self.duvidas_group_link}

üéØ **Lembre-se:** Consist√™ncia √© a chave do sucesso!

üìä Continue acompanhando nossas an√°lises e em breve voc√™ estar√° fazendo as suas pr√≥prias!"""
        
        return {
            'text': text,
            'parse_mode': 'Markdown',
            'disable_web_page_preview': True
        }
    
    def get_funnel_message_72h(self, first_name: str) -> Dict:
        """Retorna a mensagem de 72h personalizada"""
        text = f"""üöÄ {first_name}, voc√™ est√° evoluindo!

üéâ **Parab√©ns por completar 3 dias conosco!**

Essa dedica√ß√£o j√° mostra que voc√™ tem o mindset certo para o trading.

üéØ **Chegou a hora de dar o pr√≥ximo passo:**

üìä **An√°lise Pr√°tica:**
‚Ä¢ Comece a fazer suas pr√≥prias an√°lises
‚Ä¢ Use as ferramentas que ensinamos
‚Ä¢ Compartilhe suas ideias no grupo

üí∞ **Gest√£o de Capital:**
‚Ä¢ Defina seu capital de risco
‚Ä¢ Estabele√ßa metas realistas
‚Ä¢ Nunca arrisque mais que 2% por opera√ß√£o

üß† **Desenvolvimento Mental:**
‚Ä¢ Mantenha um di√°rio de trades
‚Ä¢ Controle suas emo√ß√µes
‚Ä¢ Aprenda com os erros

üéÅ **Recursos Exclusivos:**
‚Ä¢ [Planilha de Controle](https://exemplo.com/planilha)
‚Ä¢ [Checklist do Trader](https://exemplo.com/checklist)
‚Ä¢ [Estrat√©gias Avan√ßadas](https://exemplo.com/avancado)

üí° **Dica especial:**
Os traders mais bem-sucedidos s√£o aqueles que nunca param de aprender. Continue estudando, praticando e interagindo!

üî• **Voc√™ tem potencial para ser um grande trader!**

Qualquer d√∫vida, estamos aqui para ajudar. Vamos juntos rumo ao sucesso! üöÄ"""
        
        return {
            'text': text,
            'parse_mode': 'Markdown',
            'disable_web_page_preview': True
        }
    
    async def schedule_funnel_check(self, context: ContextTypes.DEFAULT_TYPE) -> None:
        """Agenda verifica√ß√£o peri√≥dica do funil (para usar com JobQueue)"""
        await self.check_funnel_messages()
    
    def delay(self, ms: int) -> None:
        """Fun√ß√£o de delay (compatibilidade com c√≥digo JavaScript)"""
        return asyncio.sleep(ms / 1000)